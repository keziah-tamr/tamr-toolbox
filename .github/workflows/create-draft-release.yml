name: Create Draft Release
on:
  workflow_dispatch:

jobs:
  create_draft_release:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:18.04
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v2
        with:
          ref: "main"
      - name: Export version
        run: echo ::set-output name=version::$(cat version.txt)
        id: get_version

      # Install OS specific requirements
      - name: Install environment specific requirements
        #if: startsWith(github.event.inputs.os, 'ubuntu')
        run: apt update -y  && apt install -y software-properties-common && apt install -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev wget zip
#      - name: Install environment specific requirements
#        if: startsWith(github.event.inputs.os, 'centos')
#        run: yum update -y && yum -y groupinstall "Development Tools" && yum install -y wget gcc openssl-devel bzip2-devel libffi-devel zip

      # Install toolbox and Python
      - name: Install Python
        run: wget https://www.python.org/ftp/python/3.7.5/Python-3.7.5.tgz && tar xzf Python-3.7.5.tgz && cd Python-3.7.5 && ./configure --with-ensurepip=install &&  make install -j 8
      - name: Install toolbox requirements
        run: python3 install.py

#      - name: Run tests
#        run: invoke test
#      - name: Run lint check
#        run: invoke lint
#      - name: Run format check
#        run: invoke format

      - name: Build docs
        run: invoke docs

#      - name: Prepare for wkhtmltopdf install
#        run: sudo sed -i 's/azure.archive.ubuntu.com/old-releases.ubuntu.com/g' /etc/apt/sources.list
      - name: Install wkhtmltopdf
        run: apt install wkhtmltopdf --fix-missing
      - name: Create pdf
        run: python ./doc_src/generate_pdf.py

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          draft: true
          prerelease: false
          body: "Documentation: https://datatamer.github.io/tamr-toolbox/${{ steps.get_version.outputs.version }}/ \n\n Highlights:\n"

      - name: Upload pdf docs
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./docs/_draft_build/tamr-toolbox.pdf
          asset_name: tamr_toolbox_${{ steps.get_version.outputs.version }}.pdf
          asset_content_type: application/pdf
